# Make sure RUBY_VERSION matches the Ruby version in .ruby-version and Gemfile
ARG RUBY_VERSION=3.2.5-bullseye
FROM ruby:$RUBY_VERSION

WORKDIR /app

# Set development environment
ENV RAILS_ENV="development" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="production" \
    PATH="/usr/local/node/bin:$PATH" \
    npm_config_cache="/app/.npm"

# Install packages needed for both building and running the application
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y build-essential curl git libpq-dev libvips node-gyp pkg-config python postgresql-client libproj-dev libgeos-dev proj-bin netcat xvfb libatk1.0-0 libatk-bridge2.0-0 libcups2 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libasound2 libpangocairo-1.0-0 libpango-1.0-0 libgdk-pixbuf2.0-0 libgtk-3-0 libnss3 libxss1 libx11-xcb1 libxtst6 wget gnupg2 chromium && \
    rm -rf /var/lib/apt/lists/*

# Install Ruby gems
COPY Gemfile Gemfile.lock ./
RUN gem install bundler:2.5.4 && \
    bundle install

# Install Node.js
ARG NODE_VERSION=20.15.0
RUN curl -sL https://github.com/nodenv/node-build/archive/master.tar.gz | tar xz -C /tmp/ && \
    cd /tmp/node-build-master && ./install.sh && \
    /tmp/node-build-master/bin/node-build "${NODE_VERSION}" /usr/local/node && \
    rm -rf /tmp/node-build-master

COPY . .

# in dev mode npm install AFTER copying so that we overwrite with the right architecture npm modules (and still allow users who want to run this locally to do so)
COPY package.json package-lock.json ./
RUN npm install --legacy-peer-deps --maxsockets=50


RUN bundle exec bootsnap precompile app/ lib/